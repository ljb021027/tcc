// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serviceb.proto

package test

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Btest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Btest) Reset()         { *m = Btest{} }
func (m *Btest) String() string { return proto.CompactTextString(m) }
func (*Btest) ProtoMessage()    {}
func (*Btest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd9e3f09fb38a486, []int{0}
}

func (m *Btest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Btest.Unmarshal(m, b)
}
func (m *Btest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Btest.Marshal(b, m, deterministic)
}
func (m *Btest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Btest.Merge(m, src)
}
func (m *Btest) XXX_Size() int {
	return xxx_messageInfo_Btest.Size(m)
}
func (m *Btest) XXX_DiscardUnknown() {
	xxx_messageInfo_Btest.DiscardUnknown(m)
}

var xxx_messageInfo_Btest proto.InternalMessageInfo

func (m *Btest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Btest)(nil), "test.Btest")
}

func init() { proto.RegisterFile("serviceb.proto", fileDescriptor_cd9e3f09fb38a486) }

var fileDescriptor_cd9e3f09fb38a486 = []byte{
	// 104 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x4d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0x49, 0x2d, 0x2e,
	0x51, 0x92, 0xe6, 0x62, 0x75, 0x02, 0x31, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25,
	0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x23, 0x3d, 0x2e, 0x8e, 0x60, 0x88, 0x26, 0x27,
	0x21, 0x25, 0x2e, 0x16, 0xe7, 0xc4, 0x9c, 0x1c, 0x21, 0x6e, 0x3d, 0x90, 0x72, 0x3d, 0xb0, 0x26,
	0x29, 0x64, 0x8e, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0x64, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x93, 0x31, 0x3b, 0x6a, 0x6b, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceBClient is the client API for ServiceB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceBClient interface {
	Call(ctx context.Context, in *Btest, opts ...grpc.CallOption) (*Btest, error)
}

type serviceBClient struct {
	cc *grpc.ClientConn
}

func NewServiceBClient(cc *grpc.ClientConn) ServiceBClient {
	return &serviceBClient{cc}
}

func (c *serviceBClient) Call(ctx context.Context, in *Btest, opts ...grpc.CallOption) (*Btest, error) {
	out := new(Btest)
	err := c.cc.Invoke(ctx, "/test.ServiceB/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceBServer is the server API for ServiceB service.
type ServiceBServer interface {
	Call(context.Context, *Btest) (*Btest, error)
}

// UnimplementedServiceBServer can be embedded to have forward compatible implementations.
type UnimplementedServiceBServer struct {
}

func (*UnimplementedServiceBServer) Call(ctx context.Context, req *Btest) (*Btest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}

func RegisterServiceBServer(s *grpc.Server, srv ServiceBServer) {
	s.RegisterService(&_ServiceB_serviceDesc, srv)
}

func _ServiceB_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Btest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceBServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.ServiceB/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceBServer).Call(ctx, req.(*Btest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.ServiceB",
	HandlerType: (*ServiceBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _ServiceB_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "serviceb.proto",
}

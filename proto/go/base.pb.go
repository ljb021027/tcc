// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base.proto

package tcc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReportStatus int32

const (
	ReportStatus__ ReportStatus = 0
	//成功，可以继续
	ReportStatus_SUCCESS ReportStatus = 1
	//失败，需要中止
	ReportStatus_FAIL ReportStatus = 2
)

var ReportStatus_name = map[int32]string{
	0: "_",
	1: "SUCCESS",
	2: "FAIL",
}

var ReportStatus_value = map[string]int32{
	"_":       0,
	"SUCCESS": 1,
	"FAIL":    2,
}

func (x ReportStatus) String() string {
	return proto.EnumName(ReportStatus_name, int32(x))
}

func (ReportStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{0}
}

type Branch struct {
	Xid      *Xid   `protobuf:"bytes,1,opt,name=xid,proto3" json:"xid,omitempty"`
	BranchId string `protobuf:"bytes,2,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	//rm信息，可以通过这个rpc调用资源
	RmResource *RmResource `protobuf:"bytes,3,opt,name=rm_resource,json=rmResource,proto3" json:"rm_resource,omitempty"`
	//参数
	Param                *Param   `protobuf:"bytes,4,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Branch) Reset()         { *m = Branch{} }
func (m *Branch) String() string { return proto.CompactTextString(m) }
func (*Branch) ProtoMessage()    {}
func (*Branch) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{0}
}

func (m *Branch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Branch.Unmarshal(m, b)
}
func (m *Branch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Branch.Marshal(b, m, deterministic)
}
func (m *Branch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Branch.Merge(m, src)
}
func (m *Branch) XXX_Size() int {
	return xxx_messageInfo_Branch.Size(m)
}
func (m *Branch) XXX_DiscardUnknown() {
	xxx_messageInfo_Branch.DiscardUnknown(m)
}

var xxx_messageInfo_Branch proto.InternalMessageInfo

func (m *Branch) GetXid() *Xid {
	if m != nil {
		return m.Xid
	}
	return nil
}

func (m *Branch) GetBranchId() string {
	if m != nil {
		return m.BranchId
	}
	return ""
}

func (m *Branch) GetRmResource() *RmResource {
	if m != nil {
		return m.RmResource
	}
	return nil
}

func (m *Branch) GetParam() *Param {
	if m != nil {
		return m.Param
	}
	return nil
}

//RmResource 可以定位到service
type RmResource struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RmResource) Reset()         { *m = RmResource{} }
func (m *RmResource) String() string { return proto.CompactTextString(m) }
func (*RmResource) ProtoMessage()    {}
func (*RmResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{1}
}

func (m *RmResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RmResource.Unmarshal(m, b)
}
func (m *RmResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RmResource.Marshal(b, m, deterministic)
}
func (m *RmResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RmResource.Merge(m, src)
}
func (m *RmResource) XXX_Size() int {
	return xxx_messageInfo_RmResource.Size(m)
}
func (m *RmResource) XXX_DiscardUnknown() {
	xxx_messageInfo_RmResource.DiscardUnknown(m)
}

var xxx_messageInfo_RmResource proto.InternalMessageInfo

func (m *RmResource) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type Param struct {
	Value                map[string]string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Param) Reset()         { *m = Param{} }
func (m *Param) String() string { return proto.CompactTextString(m) }
func (*Param) ProtoMessage()    {}
func (*Param) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{2}
}

func (m *Param) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Param.Unmarshal(m, b)
}
func (m *Param) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Param.Marshal(b, m, deterministic)
}
func (m *Param) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Param.Merge(m, src)
}
func (m *Param) XXX_Size() int {
	return xxx_messageInfo_Param.Size(m)
}
func (m *Param) XXX_DiscardUnknown() {
	xxx_messageInfo_Param.DiscardUnknown(m)
}

var xxx_messageInfo_Param proto.InternalMessageInfo

func (m *Param) GetValue() map[string]string {
	if m != nil {
		return m.Value
	}
	return nil
}

type Xid struct {
	Sequences            string   `protobuf:"bytes,1,opt,name=sequences,proto3" json:"sequences,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Xid) Reset()         { *m = Xid{} }
func (m *Xid) String() string { return proto.CompactTextString(m) }
func (*Xid) ProtoMessage()    {}
func (*Xid) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{3}
}

func (m *Xid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Xid.Unmarshal(m, b)
}
func (m *Xid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Xid.Marshal(b, m, deterministic)
}
func (m *Xid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Xid.Merge(m, src)
}
func (m *Xid) XXX_Size() int {
	return xxx_messageInfo_Xid.Size(m)
}
func (m *Xid) XXX_DiscardUnknown() {
	xxx_messageInfo_Xid.DiscardUnknown(m)
}

var xxx_messageInfo_Xid proto.InternalMessageInfo

func (m *Xid) GetSequences() string {
	if m != nil {
		return m.Sequences
	}
	return ""
}

type Report struct {
	ReportStatus         ReportStatus `protobuf:"varint,1,opt,name=report_status,json=reportStatus,proto3,enum=tcc.ReportStatus" json:"report_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Report) Reset()         { *m = Report{} }
func (m *Report) String() string { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()    {}
func (*Report) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{4}
}

func (m *Report) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Report.Unmarshal(m, b)
}
func (m *Report) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Report.Marshal(b, m, deterministic)
}
func (m *Report) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Report.Merge(m, src)
}
func (m *Report) XXX_Size() int {
	return xxx_messageInfo_Report.Size(m)
}
func (m *Report) XXX_DiscardUnknown() {
	xxx_messageInfo_Report.DiscardUnknown(m)
}

var xxx_messageInfo_Report proto.InternalMessageInfo

func (m *Report) GetReportStatus() ReportStatus {
	if m != nil {
		return m.ReportStatus
	}
	return ReportStatus__
}

func init() {
	proto.RegisterEnum("tcc.ReportStatus", ReportStatus_name, ReportStatus_value)
	proto.RegisterType((*Branch)(nil), "tcc.Branch")
	proto.RegisterType((*RmResource)(nil), "tcc.RmResource")
	proto.RegisterType((*Param)(nil), "tcc.Param")
	proto.RegisterMapType((map[string]string)(nil), "tcc.Param.ValueEntry")
	proto.RegisterType((*Xid)(nil), "tcc.Xid")
	proto.RegisterType((*Report)(nil), "tcc.Report")
}

func init() { proto.RegisterFile("base.proto", fileDescriptor_db1b6b0986796150) }

var fileDescriptor_db1b6b0986796150 = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xcb, 0x4a, 0xc3, 0x40,
	0x14, 0x86, 0x9d, 0xa6, 0xa9, 0xcd, 0x49, 0xd5, 0x38, 0x28, 0x84, 0x56, 0x24, 0xc4, 0x4d, 0x51,
	0x49, 0xa5, 0x82, 0x14, 0x57, 0x6a, 0xa9, 0x50, 0x70, 0x21, 0x13, 0x94, 0xee, 0x42, 0x2e, 0x63,
	0x0d, 0x6d, 0x2e, 0x4e, 0x26, 0x62, 0x1e, 0xc4, 0xf7, 0x95, 0xcc, 0xb4, 0xa6, 0xbb, 0x73, 0xbe,
	0xff, 0x3b, 0x3f, 0xb9, 0x00, 0x04, 0x7e, 0x41, 0x9d, 0x9c, 0x65, 0x3c, 0xc3, 0x0a, 0x0f, 0xc3,
	0xfe, 0x60, 0x99, 0x65, 0xcb, 0x35, 0x1d, 0x09, 0x14, 0x94, 0x1f, 0x23, 0x9a, 0xe4, 0xbc, 0x92,
	0x86, 0xfd, 0x8b, 0xa0, 0xf3, 0xc4, 0xfc, 0x34, 0xfc, 0xc4, 0x7d, 0x50, 0x7e, 0xe2, 0xc8, 0x44,
	0x16, 0x1a, 0xea, 0xe3, 0xae, 0xc3, 0xc3, 0xd0, 0x59, 0xc4, 0x11, 0xa9, 0x21, 0x1e, 0x80, 0x16,
	0x08, 0xcb, 0x8b, 0x23, 0xb3, 0x65, 0xa1, 0xa1, 0x46, 0xba, 0x12, 0xcc, 0x23, 0x7c, 0x03, 0x3a,
	0x4b, 0x3c, 0x46, 0x8b, 0xac, 0x64, 0x21, 0x35, 0x15, 0x51, 0x70, 0x24, 0x0a, 0x48, 0x42, 0x36,
	0x98, 0x00, 0xfb, 0x9f, 0xb1, 0x05, 0x6a, 0xee, 0x33, 0x3f, 0x31, 0xdb, 0xc2, 0x05, 0xe1, 0xbe,
	0xd6, 0x84, 0xc8, 0xc0, 0x3e, 0x07, 0x68, 0x6e, 0xb1, 0x01, 0x4a, 0xc9, 0x62, 0xf1, 0x68, 0x1a,
	0xa9, 0x47, 0x3b, 0x05, 0x55, 0xf8, 0xf8, 0x0a, 0xd4, 0x6f, 0x7f, 0x5d, 0x52, 0x13, 0x59, 0xca,
	0x50, 0x1f, 0x9f, 0x36, 0x55, 0xce, 0x7b, 0xcd, 0x67, 0x29, 0x67, 0x15, 0x91, 0x4e, 0x7f, 0x02,
	0xd0, 0xc0, 0xba, 0x75, 0x45, 0xab, 0x6d, 0xeb, 0x8a, 0x56, 0xf8, 0x64, 0x5b, 0x26, 0x5f, 0x51,
	0x2e, 0xf7, 0xad, 0x09, 0xb2, 0x2f, 0x40, 0x59, 0xc4, 0x11, 0x3e, 0x03, 0xad, 0xa0, 0x5f, 0x25,
	0x4d, 0x43, 0x5a, 0x6c, 0x0e, 0x1b, 0x60, 0x3f, 0x40, 0x87, 0xd0, 0x3c, 0x63, 0x1c, 0xdf, 0xc1,
	0x01, 0x13, 0x93, 0x57, 0x70, 0x9f, 0x97, 0xd2, 0x3d, 0x1c, 0x1f, 0xcb, 0x8f, 0x22, 0x12, 0x57,
	0x04, 0xa4, 0xc7, 0x76, 0xb6, 0xcb, 0x6b, 0xe8, 0xed, 0xa6, 0x58, 0x05, 0xe4, 0x19, 0x7b, 0x58,
	0x87, 0x7d, 0xf7, 0x6d, 0x3a, 0x9d, 0xb9, 0xae, 0x81, 0x70, 0x17, 0xda, 0xcf, 0x8f, 0xf3, 0x17,
	0xa3, 0x15, 0x74, 0xc4, 0x3f, 0xbc, 0xfd, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x4c, 0x13, 0x17,
	0xf3, 0x01, 0x00, 0x00,
}
